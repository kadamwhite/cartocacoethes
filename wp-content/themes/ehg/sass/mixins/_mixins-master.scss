// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
	font-size: ($sizeValue * 16) * 1px;
	font-size: $sizeValue * 1rem;
}

// Respond to diffent screen sizes (xs, sm, md, lg)
// (See _structure.scss for breakpoint map)
@mixin respond-above($breakpoint) {
  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {
    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (min-width: $breakpoint-value) {
      @content;
    }
  } @else {
    // If the breakpoint doesn't exist in the map, log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

// Respond below a specific screen size
// (avoid unless relying on respond-above alone is too complex)
@mixin respond-below($breakpoint) {
  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {
    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (max-width: $breakpoint-value) {
      @content;
    }
  } @else {
    // If the breakpoint doesn't exist in the map, log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

@mixin cap-block-width {
	@include center-block;
	width: 100%;
	max-width: $size__page-max-width;
	padding: 0 2rem;
	background: $color__background-body;
}

// Clearfix
@mixin clearfix() {
	content: "";
	display: table;
	table-layout: fixed;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
	clear: both;
}

// Column width with margin
@mixin column-width($numberColumns: 3) {
	width: map-get( $columns, $numberColumns ) - ( ( $columns__margin * ( $numberColumns - 1 ) ) / $numberColumns );
}
